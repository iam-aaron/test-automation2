// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BSuiteE2ERegressionTestSuite.Features.JobCompletion
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Job Completion - Job Cancelled via Desktop - Call Desk Technician", new string[] {
            "AllTests",
            "Bsuite",
            "BSuite-Website",
            "Job-Completion",
            "Call-Desk-Technician"}, Description="As a User with role \"Call Desk Technician\" accessing BSuite desktop portal,\r\nI am" +
        " able to Cancel a Task\r\n\r\nDescription", SourceFile="Features\\Job Completion\\Job Completion - Job Cancelled via Desktop - Call Desk Te" +
        "chnician.feature", SourceLine=1)]
    public partial class JobCompletion_JobCancelledViaDesktop_CallDeskTechnicianFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = new string[] {
                "AllTests",
                "Bsuite",
                "BSuite-Website",
                "Job-Completion",
                "Call-Desk-Technician"};
        
#line 1 "Job Completion - Job Cancelled via Desktop - Call Desk Technician.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Job Completion", "Job Completion - Job Cancelled via Desktop - Call Desk Technician", "As a User with role \"Call Desk Technician\" accessing BSuite desktop portal,\r\nI am" +
                    " able to Cancel a Task\r\n\r\nDescription", ProgrammingLanguage.CSharp, new string[] {
                        "AllTests",
                        "Bsuite",
                        "BSuite-Website",
                        "Job-Completion",
                        "Call-Desk-Technician"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Job Completion - Job Cancelled via Desktop - Call Desk Technician", new string[] {
                "GSQA-54"}, SourceLine=7)]
        public virtual void JobCompletion_JobCancelledViaDesktop_CallDeskTechnician()
        {
            string[] tagsOfScenario = new string[] {
                    "GSQA-54"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Job Completion - Job Cancelled via Desktop - Call Desk Technician", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 8
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 9
 testRunner.Given("I have logged into BSuite \'Desktop\' portal as a User with role \'Call Desk Technic" +
                        "ian\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 10
 testRunner.And("I have navigated to \'Call Centre\' page from the top menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table98.AddRow(new string[] {
                            "Contract/WorkType",
                            "ALH Group - IT Support - Break Fix"});
#line 11
 testRunner.And("I have navigated to \'Add Task\' page and entered details as follows", ((string)(null)), table98, "And ");
#line hidden
#line 14
 testRunner.When("I click the \'Add Task\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value/Action"});
                table99.AddRow(new string[] {
                            "Site",
                            "688"});
                table99.AddRow(new string[] {
                            "Contact",
                            "Sam1234"});
                table99.AddRow(new string[] {
                            "App. Start Time",
                            "2021-11-02"});
                table99.AddRow(new string[] {
                            "App. Start Hour",
                            "00"});
                table99.AddRow(new string[] {
                            "App. Start Minute",
                            "55"});
                table99.AddRow(new string[] {
                            "App. End Time",
                            "2021-11-18"});
                table99.AddRow(new string[] {
                            "App. End Hour",
                            "00"});
                table99.AddRow(new string[] {
                            "App. End Minute",
                            "00"});
                table99.AddRow(new string[] {
                            "Serial Number",
                            "1"});
                table99.AddRow(new string[] {
                            "Position",
                            "1"});
                table99.AddRow(new string[] {
                            "Part",
                            "1000041"});
                table99.AddRow(new string[] {
                            "Part Status",
                            "Usable"});
                table99.AddRow(new string[] {
                            "Priority",
                            "1"});
                table99.AddRow(new string[] {
                            "Problem Category",
                            "Unknown"});
                table99.AddRow(new string[] {
                            "Problem Code",
                            "Unknown"});
                table99.AddRow(new string[] {
                            "Problem Desc",
                            "GSQA-54"});
#line 15
 testRunner.Then("I enter the following details in the \'Add Task - FieldTask\' page", ((string)(null)), table99, "Then ");
#line hidden
#line 33
 testRunner.When("I click the \'Save\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 34
 testRunner.Then("I fetch the task number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 35
 testRunner.And("I click the \'Finish\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 37
 testRunner.Given("I have navigated to \'Task Status Screen\' page from \'Call Centre\' top menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 38
 testRunner.And("I search the task number in \'Task Status Screen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 39
 testRunner.And("I select \'CANCEL\' from the \'Task Status\' drop down box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 41
 testRunner.Given("I have navigated to \'Task Status Screen\' page from \'Call Centre\' top menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 42
 testRunner.And("I click \'Search Field Tasks\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 43
 testRunner.When("I select the task number with status as \'SENT\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 44
 testRunner.Then("I select \'CANCEL\' from the \'Task Status\' drop down box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 46
 testRunner.Given("I have navigated to \'Call Centre\' page from the top menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
                TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table100.AddRow(new string[] {
                            "Contract/WorkType",
                            "ALH Group - IT Support - Break Fix"});
#line 47
 testRunner.And("I have navigated to \'Add Task\' page and entered details as follows", ((string)(null)), table100, "And ");
#line hidden
#line 50
 testRunner.When("I click the \'Add Task\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value/Action"});
                table101.AddRow(new string[] {
                            "Site",
                            "688"});
                table101.AddRow(new string[] {
                            "Contact",
                            "Sam1234"});
                table101.AddRow(new string[] {
                            "App. Start Time",
                            "2021-11-02"});
                table101.AddRow(new string[] {
                            "App. Start Hour",
                            "00"});
                table101.AddRow(new string[] {
                            "App. Start Minute",
                            "55"});
                table101.AddRow(new string[] {
                            "App. End Time",
                            "2021-11-18"});
                table101.AddRow(new string[] {
                            "App. End Hour",
                            "00"});
                table101.AddRow(new string[] {
                            "App. End Minute",
                            "00"});
                table101.AddRow(new string[] {
                            "Serial Number",
                            "1"});
                table101.AddRow(new string[] {
                            "Position",
                            "1"});
                table101.AddRow(new string[] {
                            "Part",
                            "1000041"});
                table101.AddRow(new string[] {
                            "Part Status",
                            "Usable"});
                table101.AddRow(new string[] {
                            "Priority",
                            "1"});
                table101.AddRow(new string[] {
                            "Problem Category",
                            "Unknown"});
                table101.AddRow(new string[] {
                            "Problem Code",
                            "Unknown"});
                table101.AddRow(new string[] {
                            "Problem Desc",
                            "GSQA-53"});
#line 51
 testRunner.Then("I enter the following details in the \'Add Task - FieldTask\' page", ((string)(null)), table101, "Then ");
#line hidden
#line 69
 testRunner.When("I click the \'Save\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 70
 testRunner.Then("I fetch the task number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 71
 testRunner.And("I click the \'Finish\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 72
 testRunner.Given("I have navigated to \'Task Status Screen\' page from \'Call Centre\' top menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 73
 testRunner.And("I search the task number in \'Task Status Screen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 74
 testRunner.And("I select \'TAKEN\' from the \'Task Status\' drop down box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 75
 testRunner.And("I have navigated to \'Task Status Screen\' page from \'Call Centre\' top menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 76
 testRunner.When("I search the task number in \'Task Status Screen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 77
 testRunner.Then("I select \'CANCEL\' from the \'Task Status\' drop down box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 79
 testRunner.Given("I have navigated to \'Call Centre\' page from the top menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
                TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table102.AddRow(new string[] {
                            "Contract/WorkType",
                            "ALH Group - IT Support - Break Fix"});
#line 80
 testRunner.And("I have navigated to \'Add Task\' page and entered details as follows", ((string)(null)), table102, "And ");
#line hidden
#line 83
 testRunner.When("I click the \'Add Task\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value/Action"});
                table103.AddRow(new string[] {
                            "Site",
                            "688"});
                table103.AddRow(new string[] {
                            "Contact",
                            "Sam1234"});
                table103.AddRow(new string[] {
                            "App. Start Time",
                            "2021-11-02"});
                table103.AddRow(new string[] {
                            "App. Start Hour",
                            "00"});
                table103.AddRow(new string[] {
                            "App. Start Minute",
                            "55"});
                table103.AddRow(new string[] {
                            "App. End Time",
                            "2021-11-18"});
                table103.AddRow(new string[] {
                            "App. End Hour",
                            "00"});
                table103.AddRow(new string[] {
                            "App. End Minute",
                            "00"});
                table103.AddRow(new string[] {
                            "Serial Number",
                            "1"});
                table103.AddRow(new string[] {
                            "Position",
                            "1"});
                table103.AddRow(new string[] {
                            "Part",
                            "1000041"});
                table103.AddRow(new string[] {
                            "Part Status",
                            "Usable"});
                table103.AddRow(new string[] {
                            "Priority",
                            "1"});
                table103.AddRow(new string[] {
                            "Problem Category",
                            "Unknown"});
                table103.AddRow(new string[] {
                            "Problem Code",
                            "Unknown"});
                table103.AddRow(new string[] {
                            "Problem Desc",
                            "GSQA-53"});
#line 84
 testRunner.Then("I enter the following details in the \'Add Task - FieldTask\' page", ((string)(null)), table103, "Then ");
#line hidden
#line 102
 testRunner.When("I click the \'Save\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 103
 testRunner.Then("I fetch the task number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 104
 testRunner.And("I click the \'Finish\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 105
 testRunner.Given("I have navigated to \'Task Status Screen\' page from \'Call Centre\' top menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 106
 testRunner.And("I search the task number in \'Task Status Screen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 107
 testRunner.And("I select \'QUEUED\' from the \'Task Status\' drop down box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 108
 testRunner.And("I have navigated to \'Task Status Screen\' page from \'Call Centre\' top menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 109
 testRunner.When("I search the task number in \'Task Status Screen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 110
 testRunner.Then("I select \'CANCEL\' from the \'Task Status\' drop down box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 112
 testRunner.Given("I have navigated to \'Call Centre\' page from the top menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
                TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table104.AddRow(new string[] {
                            "Contract/WorkType",
                            "ALH Group - IT Support - Break Fix"});
#line 113
 testRunner.And("I have navigated to \'Add Task\' page and entered details as follows", ((string)(null)), table104, "And ");
#line hidden
#line 116
 testRunner.When("I click the \'Add Task\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value/Action"});
                table105.AddRow(new string[] {
                            "Site",
                            "688"});
                table105.AddRow(new string[] {
                            "Contact",
                            "Sam1234"});
                table105.AddRow(new string[] {
                            "App. Start Time",
                            "2021-11-02"});
                table105.AddRow(new string[] {
                            "App. Start Hour",
                            "00"});
                table105.AddRow(new string[] {
                            "App. Start Minute",
                            "55"});
                table105.AddRow(new string[] {
                            "App. End Time",
                            "2021-11-18"});
                table105.AddRow(new string[] {
                            "App. End Hour",
                            "00"});
                table105.AddRow(new string[] {
                            "App. End Minute",
                            "00"});
                table105.AddRow(new string[] {
                            "Serial Number",
                            "1"});
                table105.AddRow(new string[] {
                            "Position",
                            "1"});
                table105.AddRow(new string[] {
                            "Part",
                            "1000041"});
                table105.AddRow(new string[] {
                            "Part Status",
                            "Usable"});
                table105.AddRow(new string[] {
                            "Priority",
                            "1"});
                table105.AddRow(new string[] {
                            "Problem Category",
                            "Unknown"});
                table105.AddRow(new string[] {
                            "Problem Code",
                            "Unknown"});
                table105.AddRow(new string[] {
                            "Problem Desc",
                            "GSQA-53"});
#line 117
 testRunner.Then("I enter the following details in the \'Add Task - FieldTask\' page", ((string)(null)), table105, "Then ");
#line hidden
#line 135
 testRunner.When("I click the \'Save\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 136
 testRunner.Then("I fetch the task number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 137
 testRunner.And("I click the \'Finish\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 138
 testRunner.Given("I have navigated to \'Task Status Screen\' page from \'Call Centre\' top menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 139
 testRunner.And("I search the task number in \'Task Status Screen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 140
 testRunner.And("I select \'TAKEN\' from the \'Task Status\' drop down box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 141
 testRunner.And("I have navigated to \'Task Status Screen\' page from \'Call Centre\' top menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 142
 testRunner.When("I search the task number in \'Task Status Screen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 143
 testRunner.Then("I select \'RELEASED\' from the \'Task Status\' drop down box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 144
 testRunner.When("I search the task number in \'Task Status Screen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 145
 testRunner.Then("I select \'CANCEL\' from the \'Task Status\' drop down box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 147
 testRunner.Given("I have navigated to \'Call Centre\' page from the top menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
                TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table106.AddRow(new string[] {
                            "Contract/WorkType",
                            "ALH Group - IT Support - Break Fix"});
#line 148
 testRunner.And("I have navigated to \'Add Task\' page and entered details as follows", ((string)(null)), table106, "And ");
#line hidden
#line 151
 testRunner.When("I click the \'Add Task\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table107 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value/Action"});
                table107.AddRow(new string[] {
                            "Site",
                            "688"});
                table107.AddRow(new string[] {
                            "Contact",
                            "Sam1234"});
                table107.AddRow(new string[] {
                            "App. Start Time",
                            "2021-11-02"});
                table107.AddRow(new string[] {
                            "App. Start Hour",
                            "00"});
                table107.AddRow(new string[] {
                            "App. Start Minute",
                            "55"});
                table107.AddRow(new string[] {
                            "App. End Time",
                            "2021-11-18"});
                table107.AddRow(new string[] {
                            "App. End Hour",
                            "00"});
                table107.AddRow(new string[] {
                            "App. End Minute",
                            "00"});
                table107.AddRow(new string[] {
                            "Serial Number",
                            "1"});
                table107.AddRow(new string[] {
                            "Position",
                            "1"});
                table107.AddRow(new string[] {
                            "Part",
                            "1000041"});
                table107.AddRow(new string[] {
                            "Part Status",
                            "Usable"});
                table107.AddRow(new string[] {
                            "Priority",
                            "1"});
                table107.AddRow(new string[] {
                            "Problem Category",
                            "Unknown"});
                table107.AddRow(new string[] {
                            "Problem Code",
                            "Unknown"});
                table107.AddRow(new string[] {
                            "Problem Desc",
                            "GSQA-53"});
#line 152
 testRunner.Then("I enter the following details in the \'Add Task - FieldTask\' page", ((string)(null)), table107, "Then ");
#line hidden
#line 170
 testRunner.When("I click the \'Save\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 171
 testRunner.Then("I fetch the task number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 172
 testRunner.And("I click the \'Finish\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 173
 testRunner.Given("I have navigated to \'Task Status Screen\' page from \'Call Centre\' top menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 174
 testRunner.And("I search the task number in \'Task Status Screen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 175
 testRunner.And("I select \'TAKEN\' from the \'Task Status\' drop down box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 176
 testRunner.And("I have navigated to \'Task Status Screen\' page from \'Call Centre\' top menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 177
 testRunner.When("I search the task number in \'Task Status Screen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 178
 testRunner.Then("I select \'ONSITE\' from the \'Task Status\' drop down box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 179
 testRunner.When("I search the task number in \'Task Status Screen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 180
 testRunner.Then("I select \'CANCEL\' from the \'Task Status\' drop down box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
