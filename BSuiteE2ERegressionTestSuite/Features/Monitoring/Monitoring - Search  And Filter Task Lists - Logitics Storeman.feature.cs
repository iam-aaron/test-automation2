// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BSuiteE2ERegressionTestSuite.Features.Monitoring
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Monitoring - Search And Filter Task Lists - Logistics Storeman", new string[] {
            "AllTests",
            "BSuite",
            "BSuite-Website",
            "Monitoring",
            "Logistics-Storeman"}, Description="As a User with role Logistics Storeman accessing BSuite desktop portal,\r\nI am abl" +
        "e to search the tasks with field values such as Task#, Client Ref#, and Serial#." +
        "", SourceFile="Features\\Monitoring\\Monitoring - Search  And Filter Task Lists - Logitics Storema" +
        "n.feature", SourceLine=1)]
    public partial class Monitoring_SearchAndFilterTaskLists_LogisticsStoremanFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = new string[] {
                "AllTests",
                "BSuite",
                "BSuite-Website",
                "Monitoring",
                "Logistics-Storeman"};
        
#line 1 "Monitoring - Search  And Filter Task Lists - Logitics Storeman.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Monitoring", "Monitoring - Search And Filter Task Lists - Logistics Storeman", "As a User with role Logistics Storeman accessing BSuite desktop portal,\r\nI am abl" +
                    "e to search the tasks with field values such as Task#, Client Ref#, and Serial#." +
                    "", ProgrammingLanguage.CSharp, new string[] {
                        "AllTests",
                        "BSuite",
                        "BSuite-Website",
                        "Monitoring",
                        "Logistics-Storeman"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Monitoring - Search And Filter Task Lists - Logistics Storeman", new string[] {
                "GSQA-74"}, SourceLine=6)]
        public virtual void Monitoring_SearchAndFilterTaskLists_LogisticsStoreman()
        {
            string[] tagsOfScenario = new string[] {
                    "GSQA-74"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Monitoring - Search And Filter Task Lists - Logistics Storeman", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 7
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 8
 testRunner.Given("I have logged into BSuite \'Desktop\' portal as a User with role \'Call Desk Manager" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 9
 testRunner.And("I have navigated to \'Call Centre\' page from the top menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table137 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table137.AddRow(new string[] {
                            "Contract/WorkType",
                            "ALH Group - IT Support - Break Fix"});
#line 10
 testRunner.And("I have navigated to \'Add Task\' page and entered details as follows", ((string)(null)), table137, "And ");
#line hidden
#line 13
 testRunner.When("I click the \'Add Task\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table138 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value/Action"});
                table138.AddRow(new string[] {
                            "Site",
                            "688"});
                table138.AddRow(new string[] {
                            "Contact",
                            "Sam1234"});
                table138.AddRow(new string[] {
                            "App. Start Time",
                            "2021-11-02"});
                table138.AddRow(new string[] {
                            "App. Start Hour",
                            "00"});
                table138.AddRow(new string[] {
                            "App. Start Minute",
                            "55"});
                table138.AddRow(new string[] {
                            "App. End Time",
                            "2021-11-18"});
                table138.AddRow(new string[] {
                            "App. End Hour",
                            "00"});
                table138.AddRow(new string[] {
                            "App. End Minute",
                            "00"});
                table138.AddRow(new string[] {
                            "Serial Number",
                            "1"});
                table138.AddRow(new string[] {
                            "Position",
                            "1"});
                table138.AddRow(new string[] {
                            "Part",
                            "1000041"});
                table138.AddRow(new string[] {
                            "Part Status",
                            "Usable"});
                table138.AddRow(new string[] {
                            "Priority",
                            "1"});
                table138.AddRow(new string[] {
                            "Client Ref #",
                            "1"});
                table138.AddRow(new string[] {
                            "Problem Category",
                            "Unknown"});
                table138.AddRow(new string[] {
                            "Problem Code",
                            "Unknown"});
                table138.AddRow(new string[] {
                            "Problem Desc",
                            "GSQA-74"});
#line 14
 testRunner.Then("I enter the following details in the \'Add Task - FieldTask\' page", ((string)(null)), table138, "Then ");
#line hidden
#line 33
 testRunner.When("I click the \'Save\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 34
 testRunner.Then("I fetch the task number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 35
 testRunner.And("I click the \'Finish\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 36
 testRunner.Then("I log off from Bsuite \'Desktop\' portal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 37
 testRunner.Given("I have logged into BSuite \'Desktop\' portal as a User with role \'Logistics Storema" +
                        "n\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 38
 testRunner.When("I have navigated to \'Task Status\' page from \'Tasks\' in \'Logistics\' top menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 39
 testRunner.Then("I search the task number in \'Task Status\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 40
 testRunner.When("I have navigated to \'Task Status\' page from \'Tasks\' in \'Logistics\' top menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 41
 testRunner.Then("I search the ClientRef number in \'Task Status\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 42
 testRunner.When("I have navigated to \'Task Status\' page from \'Tasks\' in \'Logistics\' top menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 43
 testRunner.Then("I select the \'No. of Tasks\' drop down value as \'200\' in \'Task Status\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 44
 testRunner.And("I click \'Search Field Tasks\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 45
 testRunner.And("I verify the total no of task is displayed as \'200\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
