// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BSuiteE2ERegressionTestSuite.Features.HealthAndSafety.PreStartAssessmentSurvey
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Users with these Roles must complete PreStart Form when logging into BSuite via d" +
        "esktop portal", new string[] {
            "AllTests",
            "BSuite",
            "HealthAndSafety",
            "PreStartAssessment"}, Description=@"	As a BSuite Desktop User with the following Roles:
		Logistics + Call Desk Technician
		Logistics Admin
		Logistics Admin (Limited Call Desk)
		Logistics Admin (Limited Call Desk) + PO
		Logistics Storeman
		Logistics Storeman (Casual)
		Logistics Storeman (Limited CallDesk)
		Logistics Supervisor
		Logistics Technician
		Workshop + Logistics
		Workshop Admin (NEW)
		Workshop Supervisor
		Workshop Technician (NEW)
	I must complete a Pre Start Assessment Survey when I login for the first time via the BSuite Desktop Portal
	So that I can continue to use the BSuite application to carry out my duties", SourceFile="Features\\Health and Safety\\PreStart Assessment Survey\\Users with these Roles must" +
        " complete PreStart Form when logging into BSuite via desktop portal.feature", SourceLine=1)]
    public partial class UsersWithTheseRolesMustCompletePreStartFormWhenLoggingIntoBSuiteViaDesktopPortalFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = new string[] {
                "AllTests",
                "BSuite",
                "HealthAndSafety",
                "PreStartAssessment"};
        
#line 1 "Users with these Roles must complete PreStart Form when logging into BSuite via desktop portal.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Health and Safety/PreStart Assessment Survey", "Users with these Roles must complete PreStart Form when logging into BSuite via d" +
                    "esktop portal", @"	As a BSuite Desktop User with the following Roles:
		Logistics + Call Desk Technician
		Logistics Admin
		Logistics Admin (Limited Call Desk)
		Logistics Admin (Limited Call Desk) + PO
		Logistics Storeman
		Logistics Storeman (Casual)
		Logistics Storeman (Limited CallDesk)
		Logistics Supervisor
		Logistics Technician
		Workshop + Logistics
		Workshop Admin (NEW)
		Workshop Supervisor
		Workshop Technician (NEW)
	I must complete a Pre Start Assessment Survey when I login for the first time via the BSuite Desktop Portal
	So that I can continue to use the BSuite application to carry out my duties", ProgrammingLanguage.CSharp, new string[] {
                        "AllTests",
                        "BSuite",
                        "HealthAndSafety",
                        "PreStartAssessment"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void BSuiteDesktopUsersWithTheseRolesMustCompletePreStartAssessmentSurveyWhenLoggingInForTheFirstTimeInADay(string role, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "BSUITE-10092",
                    "PositiveTests",
                    "NegativeTests",
                    "ignore"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Role", role);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("BSuite Desktop Users with these Roles must complete PreStart Assessment Survey wh" +
                    "en logging in for the first time in a day", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 22
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 23
 testRunner.Given("I have opened the BSuite Desktop Portal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 24
 testRunner.When(string.Format("I login as a User with role \'{0}\' for the first time in a day", role), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 25
 testRunner.Then("I am required to complete the Pre Start Checklist for the day", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Number",
                            "Question"});
                table60.AddRow(new string[] {
                            "1",
                            "Are all licenses that you require for your duties/role currently valid? E.G. driv" +
                                "ers licence, gaming licence/forklift licence?"});
#line 26
 testRunner.Then("the \'first\' question of the Pre Start Checklist is displayed as follows", ((string)(null)), table60, "Then ");
#line hidden
#line 29
 testRunner.When("I respond \'Yes\' to the \'first\' Pre Start Checklist question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Number",
                            "Question"});
                table61.AddRow(new string[] {
                            "2",
                            "Are your tools and equipment in good condition and do you have sufficient/enough " +
                                "PPE?"});
#line 30
 testRunner.Then("the \'second\' question of the Pre Start Checklist is displayed as follows", ((string)(null)), table61, "Then ");
#line hidden
#line 33
 testRunner.When("I respond \'Yes\' to the \'second\' Pre Start Checklist question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Number",
                            "Question"});
                table62.AddRow(new string[] {
                            "3",
                            "Have you completed all mandatory training relevant to your Field Technicians Role" +
                                " - (e.g. Electrical safety/lifting/ladders etc.) OR are you familiar with all of" +
                                " the SWP (Safe Work Practice) documents relevant to your role?"});
#line 34
 testRunner.Then("the \'third\' question of the Pre Start Checklist is displayed as follows", ((string)(null)), table62, "Then ");
#line hidden
#line 37
 testRunner.When("I respond \'Yes\' to the \'third\' Pre Start Checklist question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Number",
                            "Question"});
                table63.AddRow(new string[] {
                            "4",
                            "I am fit for work and can perform my work without compromising the safety or heal" +
                                "th of myself or others."});
#line 38
 testRunner.Then("the \'fourth\' question of the Pre Start Checklist is displayed as follows", ((string)(null)), table63, "Then ");
#line hidden
#line 41
 testRunner.When("I respond \'Yes\' to the \'fourth\' Pre Start Checklist question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 42
 testRunner.Then("the Submit button is enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 43
 testRunner.When("I click the \'Submit\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("BSuite Desktop Users with these Roles must complete PreStart Assessment Survey wh" +
            "en logging in for the first time in a day, Workshop Technician (NEW)", new string[] {
                "BSUITE-10092",
                "PositiveTests",
                "NegativeTests"}, SourceLine=46)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void BSuiteDesktopUsersWithTheseRolesMustCompletePreStartAssessmentSurveyWhenLoggingInForTheFirstTimeInADay_WorkshopTechnicianNEW()
        {
#line 22
this.BSuiteDesktopUsersWithTheseRolesMustCompletePreStartAssessmentSurveyWhenLoggingInForTheFirstTimeInADay("Workshop Technician (NEW)", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("BSuite Desktop Users with these Roles must complete PreStart Assessment Survey wh" +
            "en logging in for the first time in a day, Logistics Admin", new string[] {
                "BSUITE-10092",
                "PositiveTests",
                "NegativeTests"}, SourceLine=46)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void BSuiteDesktopUsersWithTheseRolesMustCompletePreStartAssessmentSurveyWhenLoggingInForTheFirstTimeInADay_LogisticsAdmin()
        {
#line 22
this.BSuiteDesktopUsersWithTheseRolesMustCompletePreStartAssessmentSurveyWhenLoggingInForTheFirstTimeInADay("Logistics Admin", ((string[])(null)));
#line hidden
        }
        
        public virtual void BSuiteDesktopUsersPreStartChecklistNegativePaths(string role, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "BSUITE-10092",
                    "NegativeTests",
                    "ignore"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Role", role);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("BSuite Desktop Users PreStart Checklist Negative Paths", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 52
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 53
 testRunner.Given("I have opened the BSuite Desktop Portal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 54
 testRunner.When(string.Format("I login as a User with role \'{0}\' for the first time in a day", role), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 55
 testRunner.Then("I am required to complete the Pre Start Checklist for the day", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Number",
                            "Question"});
                table64.AddRow(new string[] {
                            "1",
                            "Are all licenses that you require for your duties/role currently valid? E.G. driv" +
                                "ers licence, gaming licence/forklift licence?"});
#line 56
 testRunner.Then("the \'first\' question of the Pre Start Checklist is displayed as follows", ((string)(null)), table64, "Then ");
#line hidden
#line 59
 testRunner.When("I respond \'No\' to the \'first\' Pre Start Checklist question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 60
 testRunner.Then("a prompt is displayed to contact Supervisor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 61
 testRunner.When("data is enterered in tthat prompt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 62
 testRunner.And("supervisot accepts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Number",
                            "Question"});
                table65.AddRow(new string[] {
                            "2",
                            "Are your tools and equipment in good condition and do you have sufficient/enough " +
                                "PPE?"});
#line 63
 testRunner.Then("the \'second\' question of the Pre Start Checklist is displayed as follows", ((string)(null)), table65, "Then ");
#line hidden
#line 66
 testRunner.Then("the Submit button is enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 67
 testRunner.When("I click the \'Submit\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("BSuite Desktop Users PreStart Checklist Negative Paths, Workshop Technician (NEW)" +
            "", new string[] {
                "BSUITE-10092",
                "NegativeTests"}, SourceLine=70)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void BSuiteDesktopUsersPreStartChecklistNegativePaths_WorkshopTechnicianNEW()
        {
#line 52
this.BSuiteDesktopUsersPreStartChecklistNegativePaths("Workshop Technician (NEW)", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
