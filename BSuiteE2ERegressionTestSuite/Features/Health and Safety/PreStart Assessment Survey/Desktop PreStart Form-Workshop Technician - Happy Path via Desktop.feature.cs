// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BSuiteE2ERegressionTestSuite.Features.HealthAndSafety.PreStartAssessmentSurvey
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Health and Safety - Desktop Daily PreStart Form - Warehouse Team - Workshop Techn" +
        "ician - Happy Path via Desktop", new string[] {
            "AllTests",
            "BSuite",
            "HealthAndSafety",
            "PreStartAssessment"}, Description=@"As a BSuite Desktop User with the following Roles:
		Logistics + Call Desk Technician
		Logistics Admin
		Logistics Admin (Limited Call Desk)
		Logistics Admin (Limited Call Desk) + PO
		Logistics Storeman
		Logistics Storeman (Casual)
		Logistics Storeman (Limited CallDesk)
		Logistics Supervisor
		Logistics Technician
		Workshop + Logistics
		Workshop Admin (NEW)
		Workshop Supervisor
		Workshop Technician (NEW)
	I must complete a Pre Start Assessment Survey when I login for the first time via the BSuite Desktop Portal
	So that I can continue to use the BSuite application to carry out my duties", SourceFile="Features\\Health and Safety\\PreStart Assessment Survey\\Desktop PreStart Form-Works" +
        "hop Technician - Happy Path via Desktop.feature", SourceLine=1)]
    public partial class HealthAndSafety_DesktopDailyPreStartForm_WarehouseTeam_WorkshopTechnician_HappyPathViaDesktopFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = new string[] {
                "AllTests",
                "BSuite",
                "HealthAndSafety",
                "PreStartAssessment"};
        
#line 1 "Desktop PreStart Form-Workshop Technician - Happy Path via Desktop.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Health and Safety/PreStart Assessment Survey", "Health and Safety - Desktop Daily PreStart Form - Warehouse Team - Workshop Techn" +
                    "ician - Happy Path via Desktop", @"As a BSuite Desktop User with the following Roles:
		Logistics + Call Desk Technician
		Logistics Admin
		Logistics Admin (Limited Call Desk)
		Logistics Admin (Limited Call Desk) + PO
		Logistics Storeman
		Logistics Storeman (Casual)
		Logistics Storeman (Limited CallDesk)
		Logistics Supervisor
		Logistics Technician
		Workshop + Logistics
		Workshop Admin (NEW)
		Workshop Supervisor
		Workshop Technician (NEW)
	I must complete a Pre Start Assessment Survey when I login for the first time via the BSuite Desktop Portal
	So that I can continue to use the BSuite application to carry out my duties", ProgrammingLanguage.CSharp, new string[] {
                        "AllTests",
                        "BSuite",
                        "HealthAndSafety",
                        "PreStartAssessment"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void HealthAndSafety_DesktopDailyPreStartForm_WarehouseTeam_WorkshopTechnician_HappyPathViaDesktop(string role, string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "GSQA-165",
                    "PositiveTests"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Role", role);
            argumentsOfScenario.Add("Username", username);
            argumentsOfScenario.Add("Password", password);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Health and Safety - Desktop Daily PreStart Form - Warehouse Team - Workshop Techn" +
                    "ician - Happy Path via Desktop", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 21
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 22
 testRunner.Given("I have opened the BSuite Desktop Portal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
                TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                            "Role",
                            "Username",
                            "Password"});
                table36.AddRow(new string[] {
                            string.Format("{0}", role),
                            string.Format("{0}", username),
                            string.Format("{0}", password)});
#line 23
 testRunner.And("I login as a User for the first time in a day with user details as follows", ((string)(null)), table36, "And ");
#line hidden
#line 26
 testRunner.Then("I am required to complete the Pre Start Checklist for the day", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Number",
                            "Question"});
                table37.AddRow(new string[] {
                            "1",
                            "Are all licenses that you require for your duties/role currently valid? E.G. driv" +
                                "ers licence, gaming licence/forklift licence?"});
#line 27
 testRunner.Then("the \'first\' question of the Pre Start Checklist is displayed as follows", ((string)(null)), table37, "Then ");
#line hidden
#line 30
 testRunner.When("I respond \'Yes\' to the \'first\' Pre Start Checklist question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Number",
                            "Question"});
                table38.AddRow(new string[] {
                            "2",
                            "Are your tools and equipment in good condition and do you have sufficient/enough " +
                                "PPE?"});
#line 31
 testRunner.Then("the \'second\' question of the Pre Start Checklist is displayed as follows", ((string)(null)), table38, "Then ");
#line hidden
#line 34
 testRunner.When("I respond \'Yes\' to the \'second\' Pre Start Checklist question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Number",
                            "Question"});
                table39.AddRow(new string[] {
                            "3",
                            "Have you completed all mandatory training relevant to your Field Technicians Role" +
                                " - (e.g. Electrical safety/lifting/ladders etc.) OR are you familiar with all of" +
                                " the SWP (Safe Work Practice) documents relevant to your role?"});
#line 35
 testRunner.Then("the \'third\' question of the Pre Start Checklist is displayed as follows", ((string)(null)), table39, "Then ");
#line hidden
#line 38
 testRunner.When("I respond \'Yes\' to the \'third\' Pre Start Checklist question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                            "Question Number",
                            "Question"});
                table40.AddRow(new string[] {
                            "4",
                            "I am fit for work and can perform my work without compromising the safety or heal" +
                                "th of myself or others."});
#line 39
 testRunner.Then("the \'fourth\' question of the Pre Start Checklist is displayed as follows", ((string)(null)), table40, "Then ");
#line hidden
#line 42
 testRunner.When("I respond \'Yes\' to the \'fourth\' Pre Start Checklist question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 43
 testRunner.Then("the Submit button is enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 44
 testRunner.When("I click the \'Submit\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Health and Safety - Desktop Daily PreStart Form - Warehouse Team - Workshop Techn" +
            "ician - Happy Path via Desktop, Workshop Technician (NEW)", new string[] {
                "GSQA-165",
                "PositiveTests"}, SourceLine=48)]
        public virtual void HealthAndSafety_DesktopDailyPreStartForm_WarehouseTeam_WorkshopTechnician_HappyPathViaDesktop_WorkshopTechnicianNEW()
        {
#line 21
this.HealthAndSafety_DesktopDailyPreStartForm_WarehouseTeam_WorkshopTechnician_HappyPathViaDesktop("Workshop Technician (NEW)", "TestWrkshp165Tech3", "bsuite", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
